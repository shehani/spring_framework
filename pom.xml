<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>halpe-church</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>halpe-church</name>
	<packaging>jar</packaging>
	<description>Halpe Church Official Web Page</description>
	<properties>
		<java.version>19</java.version>
<!--		&lt;!&ndash; Specify SonarQube server URL &ndash;&gt;-->
<!--		<sonar.host.url>http://localhost:9000</sonar.host.url>-->
<!--		&lt;!&ndash; Specify SonarQube authentication token &ndash;&gt;-->
<!--		<sonar.login>sqp_cca373e1cfcf30a0f88e1abbfb2abe629150cd90</sonar.login>-->
<!--		<sonar.java.binaries>target/classes</sonar.java.binaries>-->
<!--		<sonar.projectKey>Halpe-Church</sonar.projectKey>-->
	</properties>

	<dependencies>

		<!--Adding spring web for supporting to develop Java EE applications/web application-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--Adding thymeleaf for front end backend integration-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!--Adding devtools for applying dev changes during run time with build-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!--Adding lombok for logger preparation and automated getter and setters-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!--Adding Validation-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<!--Adding spring security-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!--Adding mysql database-->

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!--Adding spring data jpa-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Aspect Oriented Programming -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
        <!-- for mocking objects -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.4.0</version>
			<scope>test</scope>
		</dependency>

		<!--adding thymeleaf extras for security-->

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<!-- Adding jackson lib for xml serialization (java object to xml) -->

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<!-- Adding Spring Data REST for enabling rest endpoints for all entities with repositories   -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<!-- Adding Spring Data Rest HAL Explorer for getting All Spring Data Rest provided APIs Contracts via Angular based UI -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-explorer</artifactId>
		</dependency>

		<!-- Adding spring actuator for exposing application health information etc  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

	</dependencies>

	<build>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.sonarsource.scanner.maven</groupId>-->
<!--				<artifactId>sonar-maven-plugin</artifactId>-->
<!--				<version>3.9.0.2155</version> &lt;!&ndash; Use the latest version &ndash;&gt;-->
<!--			</plugin>-->

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.10</version> <!-- Use the latest version -->
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
